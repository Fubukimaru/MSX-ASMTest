;---------------------------------------------------------
; NOMBRE DE NUESTRO PROGRAMA
; HOLA MUNDO
;
---------------------------------------------------------
; DEFINIR CONTANTES
;
---------------------------------------------------------
; NO DEFINIMOS NINGUNA CONSTANTE
;
; VARIABLES DE SISTEMA
	FORCLR EQU #F3E9;
; FOREGROUND COLOUR
;
---------------------------------------------------------
; DIRECTIVAS PARA EL ENSAMBLADOR ( ASMSX )
;
---------------------------------------------------------
;.BIOS: DEFINIR NOMBRES DE LAS LLAMADAS A LA BIOS
INITXT EQU #050E
POSIT EQU #00C6
CHPUT EQU #00A2
CHGET EQU #009F

db "AB" ;ROM header


;.START  INICIO 
dw INICIO ; Code initial address

.ZILOG ;STANDARD ZILOG CODE


;.PAGE 2
ORG #8000 ; DEFINIR LA DIRECCIóN DEL CóDIGO IRá EN 8000H
;---------------------------------------------------------
; INICIO DEL PROGRAMA
;
---------------------------------------------------------
INICIO:
	CALL INIT_MODE_SC0	; INICIAR EL MODE DE PANTALLA
	CALL P_INTRO		; IMPRIMIR EL MENSAJE EN PANTALLA


LLOOP:
	CALL GET_LINE		;
	;CALL DO_SCROLL
	JP LLOOP		; TODO: INTRODUCE BREAK
FIN:
	RET

---------------------------------------------------------
; INICIALIZA EL MODO DE PANTALLA
---------------------------------------------------------
; BASIC: COLOR 15,0,0
; ESTABLECER EL FONDO DE COLOR NEGRO
INIT_MODE_SC0:
	LD HL, FORCLR
	LD (HL),15	; COLOR DEL PRIMER PLANO
	INC HL		; BLANCO
	LD (HL),1	; COLOR DE FONDO
	INC HL		; NEGRO
	LD (HL),1	; COLOR DEL BORDE
			; NEGRO
	CALL INITXT	; SET SCREEN 0
	;CALL INIT32	; SET SCREEN 1
	;CALL INIGRP	; SET SCREEN 2
	;CALL INIMLT	; SET SCREEN 3
	; SCREEN 0 : TEXTO DE 40 X 24 CON 2 COLORES 
	; SCREEN 1 : TEXTO DE 32 X 24 CON 16 COLORES 
	; SCREEN 2 : GRáFICOS DE 256 X 192 CON 16 COLORES 
	; SCREEN 3 : GRáFICOSDE 64 X 48 CON 16 COLORES 
	RET


PRINT_A:
	IN A,(#99)
	;XOR A
	LD A,10
	OUT (#99),A	;BYTE BAJO DIR
	LD A, 64
	OUT (#99),A	;BYTE ALTO DIR
			;VRAM DIRECCION 0H		

	LD A, 65 	;ASCII A MAYUS
	OUT (#98),A
	OUT (#98),A
	OUT (#98),A
	OUT (#98),A
	RET

;---------------------------------------------------------
;---------------------------------------------------------
; RUTINA QUE IMPRIME EL TEXTO EN PANTALLA
;---------------------------------------------------------
P_INTRO:
	LD HL, #0101
	CALL POSIT
	LD HL, TEXTO
	CALL IMPRI_MENSAJE
	CALL PRINT_A
	RET

DO_SCROLL: 		;BASICALLY WE REMOVE THE FIRST LINE.
	LD HL, #0101
	CALL POSIT
	LD HL, SCROLLTEXT
	CALL IMPRI_MENSAJE
	RET

INIT_CURSOR:
	LD HL, #0118	; LINE 24, POSITION 1
	CALL POSIT
	RET
	

IMPRI_MENSAJE:
 @@BUCLE:
	LD A,(HL)	; COGEMOS EL PRIMER  CARáCTER Y LO METEMOS EN A
	OR A		; COMPROBAMOS SI HEMOS LLEGADO AL FINAL DEL TEXTO
	RET Z		; Y SALIMOS DE LA RUTINA EN EL CASO QUE EL COMPARE SEA ZERO
	CALL CHPUT	; ESCRIBIMOS ESE CARáCTER EN LA POSICIóN DEL CURSOR
	INC HL		; INCREMENTAMOS HL PARA QUE APUNTE A LA SIGUIENTE LETRA
	JR @@BUCLE	; SI NO HEMOS LLEGADO AL FINAL CONTINUAMOSESCRIBIENDO

	RET
;---------------------------------------------------------
TEXTO:
	DB 27, "E"		;BORRA PANTALLA
	DB 27, "Y", 5+32, 10+32	;SITUA CURSOR EN 5,10
	DB "ESTO ES UN EJEMPLO"	;TEXT
	DB 27, "H"		;SITUA CURSOR AL PRINCIPIO
	DB 0			;FIN DE CADENA 


SCROLLTEXT:
	;DB 27, 'L', 0	;INSERT LINE IN CURSOR
	DB 27, 'M', 0	;DELETE LINE IN CURSOR


GET_LINE:
	PUSH AF			;SAVE A VALUE
	PUSH BC
	CALL CHGET		;READ CHAR

	LD B,A			;COPY INTO B

	;-------CASE ENTER	
@@ENTER:
	XOR	#0D		; CHECK IF IT IS AN ENTER
	JP NZ, @@TEXT
	
	CALL DO_SCROLL	
	CALL INIT_CURSOR

	JP @@END_GET_LINE	; GO TO THE FINAL

	

	;-------CASE TEXT
@@TEXT: 
	LD A,B
	CALL CHPUT		;WRITE CHAR
	
@@END_GET_LINE:
	POP BC
	POP AF		;RESTORE A VALUE
	RET
